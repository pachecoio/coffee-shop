import pytest
from jose import jwt, jwk, jws
from src.api import create_app
from src.database.models import db_drop_and_create_all


TOKENS = {
    "barista": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik16WkNSamc1TVVSRE5rUTBRamcyUlRRMU1VRTBSa1ZHTXpaR01FTXlPRFF5UkRZNU16UTVRZyJ9.eyJpc3MiOiJodHRwczovL3RoaXNrOGJyZC5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWY5YjRkN2U2YjE0MzUwMDc3ZjI1YWYwIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo0MjAwL2RyaW5rcyIsImlhdCI6MTYwNDE2MjUyMywiZXhwIjoxNjA0MjQ4OTIzLCJhenAiOiIyTXZPaWhmajF1M3VCOGlrZ0tWVHJpSnQ4VDlUWjdRTyIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcy1kZXRhaWwiXX0.D2O8O0VPZQOKtRAU2CfihWX7c2vccvrQwavCdX4YMczH9CGe32O6Y3GYNaYXcVrDRk1c1BJTJcB2h7FbkElgbcAKaKoAuuNt3ZdodOZncxTSzFjE7nnyKW4Wj-RYI-SoGZTzb2MDQ75A9J3a_-7QMGeOI7-0ym0cZf7TKWK4Ts2Qok-o_LiDDabLOe-qimuUTtyUVkd6OaYj_3c0houPVDQwpqUk0cnG9OBPV3HIQl7QQiRiyG5-rHDpA_9BqxWzrz4LGEn9r_8Ae7ts_lXhQ_2ijuF68pwUjpofHnMMwDVWphOZTuZ6TYUM4MTTd55vpA4foF4SLqay2Q67hwVc6A",
    "manager": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik16WkNSamc1TVVSRE5rUTBRamcyUlRRMU1VRTBSa1ZHTXpaR01FTXlPRFF5UkRZNU16UTVRZyJ9.eyJpc3MiOiJodHRwczovL3RoaXNrOGJyZC5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTgzODk3MTUzNTQ2MTc0MDY5MzMiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAvZHJpbmtzIiwiaWF0IjoxNjA0MTYyMzg4LCJleHAiOjE2MDQyNDg3ODgsImF6cCI6IjJNdk9paGZqMXUzdUI4aWtnS1ZUcmlKdDhUOVRaN1FPIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiLCJwYXRjaDpkcmlua3MiLCJwb3N0OmRyaW5rcyJdfQ.oi8bzWovOh1qs_P1HyoE3HeziKXmt6Uam8wXm7vvFZGWvYx39fANmgNDGto8ORwuSp6FWiEFZHOh3_YI2WJV5q2UIZLcoiNTvCvWJbQeKDNW82r3ppPo0Jyqn2j-PyltqbVwp2qHCSIWPCYTHi8Ebyw-qRJ5STywz36GADk3vRE4UU3dkq7lfbKBn4YtU54gtsG2pSfQ3kv7TE2SYxMneypseSJ3f_yea5cEVKJOjzx1h84-gPMy5O9QP6eyPVaAyepzWGSNMRdAnsxkPKV7kpfzX06Z2Up33PY1LD59ve7OoHEIxmUq7OzS8ILIHSDzW_RAUQvfPHyTPzPN5VfbWA",
}


@pytest.fixture
def authorization_headers():
    def inner(role=None):
        return {"Authorization": "Bearer {}".format(TOKENS[role])}

    return inner


@pytest.fixture
def barista_role(authorization_headers):
    return authorization_headers(role="barista")


@pytest.fixture
def manager_role(authorization_headers):
    return authorization_headers(role="manager")


@pytest.fixture
def app():
    flask_app = create_app(db_name="coffee_test.db")
    db_drop_and_create_all()
    yield flask_app


@pytest.fixture
def client(app):
    return app.test_client()