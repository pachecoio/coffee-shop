import pytest
from jose import jwt, jwk, jws
from src.api import create_app
from src.database.models import db_drop_and_create_all


TOKENS = {
    "barista": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik16WkNSamc1TVVSRE5rUTBRamcyUlRRMU1VRTBSa1ZHTXpaR01FTXlPRFF5UkRZNU16UTVRZyJ9.eyJpc3MiOiJodHRwczovL3RoaXNrOGJyZC5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWY5YjRkN2U2YjE0MzUwMDc3ZjI1YWYwIiwiYXVkIjoiaHR0cDovL2xvY2FsaG9zdDo0MjAwL2RyaW5rcyIsImlhdCI6MTYwNDAxMzQ4OSwiZXhwIjoxNjA0MDk5ODg5LCJhenAiOiIyTXZPaWhmajF1M3VCOGlrZ0tWVHJpSnQ4VDlUWjdRTyIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcy1kZXRhaWwiLCJwYXRjaDpkcmlua3MiLCJwb3N0OmRyaW5rcyJdfQ.H0e2EEPtjQ9BDKI2d74gQ6x8s-IUtoK27Yq3niI6ne_kQNOrVBg-dcf2Fr0G1wa6OBwOktNbYFTQaBug9pwNZeUQKsB9nhg1B0EMdc8O7yMz2bUKSSvPytzcCAxPaGfkCnXRhl_5EkRVbFleAR2w4K6QJQ7mQQ8CdfWl9Qc5AtUN4mYqDJe58PD8ZhQvfDeRk7luMMjoHqqIYQLTUsKs84NVjvM7l6H1mFWm_OqsPQXMuoI92O6mtgU11HReImrgausd-vWgI9nIC6ztlU7-jzfAhsS4itBQao1Yvq3wSiR_4djysb7ysFU5FPOJKGm_ZVp9nmLBDuiIT0iV5AVyng",
    "manager": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6Ik16WkNSamc1TVVSRE5rUTBRamcyUlRRMU1VRTBSa1ZHTXpaR01FTXlPRFF5UkRZNU16UTVRZyJ9.eyJpc3MiOiJodHRwczovL3RoaXNrOGJyZC5hdXRoMC5jb20vIiwic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTgzODk3MTUzNTQ2MTc0MDY5MzMiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjQyMDAvZHJpbmtzIiwiaWF0IjoxNjA0MDEzMTkzLCJleHAiOjE2MDQwOTk1OTMsImF6cCI6IjJNdk9paGZqMXUzdUI4aWtnS1ZUcmlKdDhUOVRaN1FPIiwic2NvcGUiOiIiLCJwZXJtaXNzaW9ucyI6WyJkZWxldGU6ZHJpbmtzIiwiZ2V0OmRyaW5rcy1kZXRhaWwiLCJwYXRjaDpkcmlua3MiLCJwb3N0OmRyaW5rcyJdfQ.aiD4ba3DeeVQBFSdczIX2H-S8TQ3ETUtle5J9heCGyZPfS97wmgokgY7TsaUDrrhC7lHsY9EIpjSqVZxMkS7ei2GPwaJRC0al_TPDayglrY_m-NKDsqiQZjmxKEDbTxfeR__n8hFJj9vWEJYrMzq7WC60YKdtCY736dIzboRPUBcY5UFHR1DG8t-NAmsTwhSBnKy11US9Ic_CoK9Y9GUnn_s7uq-roIX0OGfMuenjZumM0DF7FmXllMWhhgT3EcoAtTJtC49MjVb6OLNs669SkD4utd31CI3b78lADt0WTBHhw4Fzt9JDIjemFNGD-FW2H6K1uK7EG2xbFHYI7zOPw",
}


@pytest.fixture
def authorization_headers():
    def inner(role=None):
        return {"Authorization": "Bearer {}".format(TOKENS[role])}

    return inner


@pytest.fixture
def barista_role(authorization_headers):
    return authorization_headers(role="barista")


@pytest.fixture
def manager_role(authorization_headers):
    return authorization_headers(role="manager")


@pytest.fixture
def app():
    flask_app = create_app(db_name="coffee_test.db")
    db_drop_and_create_all()
    yield flask_app


@pytest.fixture
def client(app):
    return app.test_client()